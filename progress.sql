create table "account"
(
	acc_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	username text unique,
	firstname text,
	lastname text,
	password text,
	mobile_num text,
	admin_prev boolean,
	address text
);

create table "bills"
(
  bill_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  b_userID int REFERENCES account(acc_id) ON DELETE CASCADE,
  reading int,
  date_of_bill date NOT NULL DEFAULT CURRENT_DATE,
  due_date date,
  amount int,
  status text
);

create table "groups"
(
  g_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  g_name text,
  g_admin int REFERENCES account(acc_id) ON DELETE CASCADE
);

create table "regcode"
(
 id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
 g_id int REFERENCES groups(g_id) ON DELETE CASCADE,
 g_code text unique
);

create or replace function user_credentials(in par_id text, out text, out text, out text, out BOOLEAN) returns setof record as
$$
   select firstname,lastname,mobile_num,admin_prev from "account" where acc_id::TEXT = par_id;
$$
 language 'sql';

create or replace function register(in par_username text, in par_firstname text, in par_lastname text, in par_password text,
                                    in par_mobile text,in par_admin_prev boolean,in par_address text, in par_regkey text) returns text as
$$
  declare
    loc_res text;
    loc_grp text;

  begin
    select into loc_grp g_code from regcode where g_code = par_regkey;

    if loc_grp isnull then
      loc_res = 'Invalid Reg Code';
    else
    insert into account(username,firstname,lastname,password,mobile_num,admin_prev,address) values
      (par_username,par_firstname,par_lastname, par_password, par_mobile, par_admin_prev,par_address);
      delete from regcode where g_code = par_regkey;
      loc_res = 'ok';
    end if;
      return loc_res;
  end;
$$
LANGUAGE plpgsql;

create or replace function register_admin(in par_username text, in par_firstname text, in par_lastname text, in par_password text,
                                    in par_mobile text,in par_admin_prev boolean,in par_g_name text,in par_address text) returns text as
$$
  declare
    loc_res text;
    loc_user int;

  begin
    insert into account(username,firstname,lastname,password,mobile_num,admin_prev,address) values
      (par_username,par_firstname,par_lastname, par_password, par_mobile, par_admin_prev,par_address);
    select into loc_user acc_id from account where username = par_username;
    insert into groups(g_name,g_admin) values(par_g_name,loc_user);
      loc_res = 'ok';
      return loc_res;
  end;
$$
LANGUAGE plpgsql;

create or replace function login(in par_username text, in par_password text) returns text as
$$
  declare
    loc_user text;
    loc_res text;
  begin
     select into loc_user acc_id from account
       where username = par_username and password = par_password;

     if loc_user isnull then
       loc_res = 'Error';
     else
       loc_res = loc_user;
     end if;
     return loc_res;
  end;
$$
LANGUAGE plpgsql;
